{"version":3,"sources":["webpack:///./src/app/Film/film-list.service.ts","webpack:///./src/app/People/people-list.service.ts","webpack:///./src/app/Planet/planet-list.service.ts","webpack:///./src/app/Species/species-list.service.ts","webpack:///./src/app/Starship/starship-list.service.ts","webpack:///./src/app/Vehicle/vehicle-list.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/Film/film-list.component.ts","webpack:///./src/app/Footer/footer.component.ts","webpack:///./src/app/Header/header.component.ts","webpack:///./src/app/Navigation/navigation.component.ts","webpack:///./src/app/People/people-list.component.ts","webpack:///./src/app/Planet/planet-list.component.ts","webpack:///./src/app/Species/species-list.component.ts","webpack:///./src/app/Starship/starship-list.component.ts","webpack:///./src/app/Vehicle/vehicle-list.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Injectable }     from '@angular/core';\r\nimport { Http, Response} from '@angular/http';\r\nimport { Film }    from './Film';\r\nimport {Observable} from 'rxjs/Rx';\r\n\r\n// Import RxJs required methods\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class FilmService {\r\n  // Resolve HTTP using the constructor\r\n  constructor (private http: Http) {}\r\n  // private instance variable to hold base url\r\n  private BASE_URL = 'http://swapi.co/api/films/';\r\n\r\n  getFilms() : Observable<Film[]> {\r\n\r\n    function mapFilmResponse(response:Response): Film[]{\r\n      // The response of the API has a results\r\n      // property with the actual results\r\n      return response.json().results.map(toFilm)\r\n    }\r\n\r\n    function toFilm(r:any): Film{\r\n\r\n      let film = <Film>({\r\n        title: r.title,\r\n        episodeId: r.episode_id,\r\n        openingCrawl: r.opening_crawl,\r\n        director: r.director,\r\n        producer: r.producer,\r\n        releaseDate: r.release_date,\r\n      });\r\n\r\n      return film;\r\n    }\r\n\r\n    // ...using get request\r\n    return this.http.get(this.BASE_URL)\r\n      // ...and calling .json() on the response to return data\r\n      .map(mapFilmResponse)\r\n      //...errors if any\r\n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Film/film-list.service.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Injectable }     from '@angular/core';\r\nimport { Http, Response} from '@angular/http';\r\nimport { People }    from './People';\r\nimport {Observable} from 'rxjs/Rx';\r\n\r\n// Import RxJs required methods\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class PeopleService {\r\n  // Resolve HTTP using the constructor\r\n  constructor (private http: Http) {}\r\n  // private instance variable to hold base url\r\n  private BASE_URL = 'http://swapi.co/api/people/';\r\n\r\n  getPeople() : Observable<People[]> {\r\n\r\n    function mapPeopleResponse(response:Response): People[]{\r\n      // The response of the API has a results\r\n      // property with the actual results\r\n      return response.json().results.map(toPeople)\r\n    }\r\n\r\n    function toPeople(r:any): People{\r\n\r\n      let people = <People>({\r\n        birth_year: r.birth_year,\r\n        eye_color: r.eye_color,\r\n        openingCrawl: r.openingCrawl,\r\n        gender: r.gender,\r\n        hair_color: r.hair_color,\r\n        height: r.height,\r\n        homeworld: r.homeworld,\r\n        mass: r.mass,\r\n        name: r.name,\r\n        skin_color: r.skin_color,\r\n        created: r.created,\r\n        edited: r.edited,\r\n      });\r\n\r\n      return people;\r\n    }\r\n\r\n    // ...using get request\r\n    return this.http.get(this.BASE_URL)\r\n      // ...and calling .json() on the response to return data\r\n      .map(mapPeopleResponse)\r\n      //...errors if any\r\n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/People/people-list.service.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Injectable }     from '@angular/core';\r\nimport { Http, Response} from '@angular/http';\r\nimport { Planet } from './Planet';\r\nimport {Observable} from 'rxjs/Rx';\r\n\r\n// Import RxJs required methods\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class PlanetService {\r\n  // Resolve HTTP using the constructor\r\n  constructor (private http: Http) {}\r\n  // private instance variable to hold base url\r\n  private BASE_URL = 'http://swapi.co/api/planets/';\r\n\r\n  getPlanets() : Observable<Planet[]> {\r\n\r\n    function mapPlanetsResponse(response:Response): Planet[]{\r\n      // The response of the API has a results\r\n      // property with the actual results\r\n      return response.json().results.map(toPlanet)\r\n    }\r\n\r\n    function toPlanet(r:any): Planet{\r\n\r\n      let planet = <Planet>({\r\n        name: r.name,\r\n        rotation_period: r.rotation_period,\r\n        orbital_period: r.orbital_period,\r\n        diameter: r.diameter,\r\n        terrain: r.terrain,\r\n        climate: r.climate,\r\n        gravity: r.gravity,\r\n        surface_water: r.surface_water,\r\n        population: r.population,\r\n      });\r\n\r\n      return planet;\r\n    }\r\n\r\n    // ...using get request\r\n    return this.http.get(this.BASE_URL)\r\n      // ...and calling .json() on the response to return data\r\n      .map(mapPlanetsResponse)\r\n      //...errors if any\r\n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Planet/planet-list.service.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Injectable }     from '@angular/core';\r\nimport { Http, Response} from '@angular/http';\r\nimport { Species }    from './Species';\r\nimport {Observable} from 'rxjs/Rx';\r\n\r\n// Import RxJs required methods\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class SpeciesService {\r\n  // Resolve HTTP using the constructor\r\n  constructor (private http: Http) {}\r\n  // private instance variable to hold base url\r\n  private BASE_URL = 'http://swapi.co/api/species/';\r\n\r\n  getSpecies() : Observable<Species[]> {\r\n\r\n    function mapSpeciesResponse(response:Response): Species[]{\r\n      // The response of the API has a results\r\n      // property with the actual results\r\n      return response.json().results.map(toSpecies)\r\n    }\r\n\r\n    function toSpecies(r:any): Species{\r\n\r\n      let species = <Species>({\r\n        average_height: r.average_height,\r\n        average_lifespan: r.average_lifespan,\r\n        classification: r.classification,\r\n        created: r.created,\r\n        designation: r.designation,\r\n        edited: r.edited,\r\n        eye_colors: r.eye_colors,\r\n        hair_colors: r.hair_colors,\r\n        homeworld: r.homeworld,\r\n        language: r.language,\r\n        name: r.name,\r\n        skin_colors: r.skin_colors\r\n      });\r\n\r\n      return species;\r\n    }\r\n\r\n    // ...using get request\r\n    return this.http.get(this.BASE_URL)\r\n      // ...and calling .json() on the response to return data\r\n      .map(mapSpeciesResponse)\r\n      //...errors if any\r\n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Species/species-list.service.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Injectable }     from '@angular/core';\r\nimport { Http, Response} from '@angular/http';\r\nimport { Starship }    from './Starship';\r\nimport {Observable} from 'rxjs/Rx';\r\n\r\n// Import RxJs required methods\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class StarshipService {\r\n  // Resolve HTTP using the constructor\r\n  constructor (private http: Http) {}\r\n  // private instance variable to hold base url\r\n  private BASE_URL = 'http://swapi.co/api/films/';\r\n\r\n  getStarship() : Observable<Starship[]> {\r\n\r\n    function mapStarshipResponse(response:Response): Starship[]{\r\n      // The response of the API has a results\r\n      // property with the actual results\r\n      return response.json().results.map(toStarship)\r\n    }\r\n\r\n    function toStarship(r:any): Starship{\r\n\r\n      let starship = <Starship>({\r\n        MGLT: r.MGLT,\r\n        cargo_capacity: r.cargo_capacity,\r\n        openingCrawl: r.openingCrawl,\r\n        consumables: r.consumables,\r\n        created: r.created,\r\n        crew: r.crew,\r\n        edited: r.edited,\r\n        hyperdrive_rating: r.hyperdrive_rating,\r\n        length: r.length,\r\n        manufacturer: r.manufacturer,\r\n        max_atmosphering_speed: r.max_atmosphering_speed,\r\n        model: r.model,\r\n        name: r.name,\r\n        passengers: r.passengers,\r\n        starship_class: r.starship_class\r\n      });\r\n\r\n      return starship;\r\n    }\r\n\r\n    // ...using get request\r\n    return this.http.get(this.BASE_URL)\r\n      // ...and calling .json() on the response to return data\r\n      .map(mapStarshipResponse)\r\n      //...errors if any\r\n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Starship/starship-list.service.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Injectable }     from '@angular/core';\r\nimport { Http, Response} from '@angular/http';\r\nimport { Vehicle }    from './Vehicle';\r\nimport {Observable} from 'rxjs/Rx';\r\n\r\n// Import RxJs required methods\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class VehicleService {\r\n  // Resolve HTTP using the constructor\r\n  constructor (private http: Http) {}\r\n  // private instance variable to hold base url\r\n  private BASE_URL = 'http://swapi.co/api/films/';\r\n\r\n  getVehicle() : Observable<Vehicle[]> {\r\n\r\n    function mapVehicleResponse(response:Response): Vehicle[]{\r\n      // The response of the API has a results\r\n      // property with the actual results\r\n      return response.json().results.map(toVehicle)\r\n    }\r\n\r\n    function toVehicle(r:any): Vehicle{\r\n\r\n      let vehicle = <Vehicle>({\r\n        name: r.name,\r\n        model: r.model,\r\n        manufacturer: r.manufacturer,\r\n        cost_in_credits: r.cost_in_credits,\r\n        length: r.length,\r\n        max_atmosphering_speed: r.max_atmosphering_speed,\r\n        crew: r.crew,\r\n        passengers: r.passengers,\r\n        cargo_capacity: r.cargo_capacity,\r\n        consumables: r.consumables,\r\n        vehicle_class: r.vehicle_class\r\n      });\r\n\r\n      return vehicle;\r\n    }\r\n\r\n    // ...using get request\r\n    return this.http.get(this.BASE_URL)\r\n      // ...and calling .json() on the response to return data\r\n      .map(mapVehicleResponse)\r\n      //...errors if any\r\n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Vehicle/vehicle-list.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 397;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 397\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { FilmService } from './film-list.service';\r\nimport { Film } from './Film';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'film-list',\r\n  template: `\r\n      <h2>Films</h2>\r\n      \r\n      <table class=\"table\">\r\n        <thead class=\"table__head\">\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Title</th>\r\n          <th>Episode</th>\r\n          <th>Release Date</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody class=\"table__body\">\r\n        <tr *ngFor=\"let film of films; let i = index; trackBy:trackByEpisodId;\">\r\n          <td>{{ i+1 }}</td>\r\n          <td>{{ film.title }}</td>\r\n          <td>{{ film.episodeId }}</td>\r\n          <td>{{ film.releaseDate }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n  `\r\n})\r\nexport class FilmListComponent implements OnInit {\r\n\r\n  films: Film[];\r\n\r\n\r\n  constructor(\r\n    private filmService: FilmService\r\n  ){}\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadDataFilms()\r\n  }\r\n\r\n  loadDataFilms() {\r\n    this.filmService.getFilms()\r\n      .subscribe(\r\n        films => this.films = films, //Bind to view\r\n        err => {\r\n          // Log errors if any\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  trackByEpisodId(index:number, film:Film) {\r\n\r\n\r\n    return film.episodeId;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Film/film-list.component.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'FooterBlock',\r\n  template: `\r\n      <div class=\"footer__wrapper\">\r\n      \r\n        <div class=\"footer__text\">\r\n          <span>Crafted with &nbsp;<i class=\"fa fa-heart-o\"></i>&nbsp; by Irfan Maulana</span>\r\n        </div>\r\n      \r\n        <ul class=\"footer__list\">\r\n          <li class=\"footer__icon footer__icon--facebook\">\r\n            <a rel=\"nofollow\" href=\"https://www.facebook.com/mazipanneh\">\r\n              <i class=\"fa fa-facebook-square\"></i>\r\n            </a>\r\n          </li>\r\n          <li class=\"footer__icon footer__icon--twitter\">\r\n            <a rel=\"nofollow\" href=\"https://twitter.com/Maz_Ipan\">\r\n              <i class=\"fa fa-twitter\"></i>\r\n            </a>\r\n          </li>\r\n          <li class=\"footer__icon footer__icon--instagram\">\r\n            <a rel=\"nofollow\" href=\"https://instagram.com/maz_ipan\">\r\n              <i class=\"fa fa-instagram\"></i>\r\n            </a>\r\n          </li>\r\n          <li class=\"footer__icon footer__icon--linkedin\">\r\n            <a rel=\"nofollow\" href=\"https://id.linkedin.com/in/irfanmaulanamazipan\">\r\n              <i class=\"fa fa-linkedin\"></i>\r\n            </a>\r\n          </li>\r\n          <li class=\"footer__icon footer__icon--slideshare\">\r\n            <a rel=\"nofollow\" href=\"https://www.slideshare.net/IrfanMaulana21\">\r\n              <i class=\"fa fa-slideshare\"></i>\r\n            </a>\r\n          </li>\r\n          <li class=\"footer__icon footer__icon--github\">\r\n            <a rel=\"nofollow\" href=\"https://github.com/mazipan\">\r\n              <i class=\"fa fa-github\"></i>\r\n            </a>\r\n          </li>\r\n          <li class=\"footer__icon footer__icon--wordpress\">\r\n            <a rel=\"nofollow\" href=\"https://mazipanneh.wordpress.com/\">\r\n              <i class=\"fa fa-wordpress\"></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  `\r\n})\r\nexport class FoooterComponent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Footer/footer.component.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'HeaderBlock',\r\n  template: `\r\n        <header role=\"header\" class=\"site__header header\" id=\"header\">\r\n          <div class=\"header__wrapper\">\r\n        \r\n            <div class=\"header__brand\">\r\n              <img src=\"https://mazipan.github.io/lightweight-admin-template/images/irfan-maulana.jpg\" />\r\n              <div class=\"header__title\" [innerText]=\"headerTitle\">\r\n              </div>\r\n            </div>\r\n        \r\n            <div class=\"header__account account account--has-login\">\r\n              <div class=\"account__wrapper\">\r\n                <img class=\"account__img\" src=\"https://mazipan.github.io/lightweight-admin-template/images/irfan-maulana.jpg\" />\r\n                <span class=\"account__name\" [innerText]=\"userName\">\r\n                </span>\r\n              </div>\r\n              <i class=\"account__arrow fa fa-angle-down js--show-dropdown-menu\"></i>\r\n        \r\n              <div class=\"account__menu\">\r\n                <ul class=\"account__menu-wrapper\">\r\n                  <li class=\"account__menu-item\"><a href=\"#profil\">Profile</a></li>\r\n                  <li class=\"account__menu-item\"><a href=\"#logout\">Logout</a></li>\r\n                </ul>\r\n              </div>\r\n        \r\n            </div>\r\n        \r\n            <div class=\"header__nav--mobile\">\r\n              <div class=\"header__nav-btn\" id=\"menu-toggle\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n        \r\n          </div>\r\n        </header>\r\n  `\r\n})\r\nexport class HeaderComponent {\r\n    headerTitle: string;\r\n    userName: string;\r\n\r\n    constructor() {\r\n      this.headerTitle = 'Ng2-StarWars';\r\n      this.userName = 'Irfan';\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Header/header.component.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'NavigationListBlock',\r\n  template: `\r\n      <ul class=\"nav__wrapper\">\r\n      \r\n        <li class=\"nav__item nav__item--active\" routerLink=\"/film\" routerLinkActive=\"nav__item--active\">\r\n          <a href=\"#\">\r\n            <i class=\"nav__icon fa fa-film\"></i> Film\r\n          </a>\r\n        </li>\r\n        <li class=\"nav__item\" routerLink=\"/planet\" routerLinkActive=\"nav__item--active\">\r\n          <a routerLink=\"/planet\" routerLinkActive=\"active\">\r\n            <i class=\"nav__icon fa fa-globe\"></i> Planet\r\n          </a>\r\n        </li>\r\n        <li class=\"nav__item\" routerLink=\"/vehicle\" routerLinkActive=\"nav__item--active\">\r\n          <a routerLink=\"/vehicle\" routerLinkActive=\"active\">\r\n            <i class=\"nav__icon fa fa-car\"></i> Vehicle\r\n          </a>\r\n        </li>\r\n        <li class=\"nav__item\" routerLink=\"/starship\" routerLinkActive=\"nav__item--active\">\r\n          <a routerLink=\"/starship\" routerLinkActive=\"active\">\r\n            <i class=\"nav__icon fa fa-space-shuttle\"></i> Starship\r\n          </a>\r\n        </li>\r\n        <li class=\"nav__item\" routerLink=\"/species\" routerLinkActive=\"nav__item--active\">\r\n          <a routerLink=\"/species\" routerLinkActive=\"active\">\r\n            <i class=\"nav__icon fa fa-paw\"></i> Species\r\n          </a>\r\n        </li>\r\n        <li class=\"nav__item\" routerLink=\"/people\" routerLinkActive=\"nav__item--active\">\r\n          <a routerLink=\"/people\" routerLinkActive=\"active\">\r\n            <i class=\"nav__icon fa fa-users\"></i> People\r\n          </a>\r\n        </li>\r\n      \r\n      </ul>\r\n  `\r\n})\r\n\r\nexport class NavigationComponent {\r\n\r\n  tabActive: string;\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) {}\r\n\r\n  switchTab(tabName: string) {\r\n    this.tabActive = tabName;\r\n    this.router.navigate(['/'+ tabName]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Navigation/navigation.component.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { PeopleService } from './people-list.service';\r\nimport { People } from './People';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'people-list',\r\n  template: `\r\n      <h2>People</h2>\r\n      \r\n      <table class=\"table\">\r\n        <thead class=\"table__head\">\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Gender</th>\r\n          <th>Home World</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody class=\"table__body\">\r\n        <tr *ngFor=\"let person of people; let i = index; trackBy:trackByName;\">\r\n          <td>{{ i+1 }}</td>\r\n          <td>{{ person.name }}</td>\r\n          <td>{{ person.gender }}</td>\r\n          <td>{{ person.homeworld }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n  `\r\n})\r\nexport class PeopleListComponent implements OnInit {\r\n\r\n  people: People[];\r\n\r\n\r\n  constructor(\r\n    private peopleService: PeopleService\r\n  ){}\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadDataPeople()\r\n  }\r\n\r\n  loadDataPeople() {\r\n    this.peopleService.getPeople()\r\n      .subscribe(\r\n        people => this.people = people, //Bind to view\r\n        err => {\r\n          // Log errors if any\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  trackByName(index:number, people:People) {\r\n\r\n    return people.name;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/People/people-list.component.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { PlanetService } from './planet-list.service';\r\nimport { Planet } from './Planet';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'planet-list',\r\n  template: `\r\n        <h2>Planets</h2>\r\n      \r\n        <table class=\"table\">\r\n          <thead class=\"table__head\">\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Diameter</th>\r\n            <th>Population</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody class=\"table__body\">\r\n          <tr *ngFor=\"let planet of planets; let i = index; trackBy:trackByName;\">\r\n            <td>{{ i+1 }}</td>\r\n            <td>{{ planet.name }}</td>\r\n            <td>{{ planet.diameter }}</td>\r\n            <td>{{ planet.population }}</td>\r\n          </tr>\r\n          </tbody>\r\n        </table>`\r\n})\r\nexport class PlanetListComponent implements OnInit {\r\n\r\n  planets: Planet[];\r\n\r\n\r\n  constructor(\r\n    private planetService: PlanetService\r\n  ){}\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadDataPlanets()\r\n  }\r\n\r\n  loadDataPlanets() {\r\n    this.planetService.getPlanets()\r\n      .subscribe(\r\n        planets => this.planets = planets, //Bind to view\r\n        err => {\r\n          // Log errors if any\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  trackByName(index:number, planet:Planet) {\r\n\r\n    return planet.name;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Planet/planet-list.component.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { SpeciesService } from './species-list.service';\r\nimport { Species } from './Species';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'species-list',\r\n  template: `\r\n      <h2>Species</h2>\r\n      \r\n      <table class=\"table\">\r\n        <thead class=\"table__head\">\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Classification</th>\r\n          <th>Homeworld</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody class=\"table__body\">\r\n        <tr *ngFor=\"let spec of species; let i = index; trackBy:trackByName;\">\r\n          <td>{{ i+1 }}</td>\r\n          <td>{{ spec.name }}</td>\r\n          <td>{{ spec.classification }}</td>\r\n          <td>{{ spec.homeworld }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n  `\r\n})\r\nexport class SpeciesListComponent implements OnInit {\r\n\r\n  species: Species[];\r\n\r\n\r\n  constructor(\r\n    private speciesService: SpeciesService\r\n  ){}\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadDataSpecies()\r\n  }\r\n\r\n  loadDataSpecies() {\r\n    this.speciesService.getSpecies()\r\n      .subscribe(\r\n        species => this.species = species, //Bind to view\r\n        err => {\r\n          // Log errors if any\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  trackByName(index:number, species:Species) {\r\n\r\n\r\n    return species.name;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Species/species-list.component.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { StarshipService } from './starship-list.service';\r\nimport { Starship } from './Starship';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'starship-list',\r\n  template: `\r\n      <h2>Films</h2>\r\n      \r\n      <table class=\"table\">\r\n        <thead class=\"table__head\">\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Passengers</th>\r\n          <th>Starship Class</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody class=\"table__body\">\r\n        <tr *ngFor=\"let star of starship; let i = index; trackBy:trackByName;\">\r\n          <td>{{ i+1 }}</td>\r\n          <td>{{ star.name }}</td>\r\n          <td>{{ star.passengers }}</td>\r\n          <td>{{ star.starship_class }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n  `\r\n})\r\nexport class StarshipListComponent implements OnInit {\r\n\r\n  starship: Starship[];\r\n\r\n\r\n  constructor(\r\n    private starshipService: StarshipService\r\n  ){}\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadDataStarship()\r\n  }\r\n\r\n  loadDataStarship() {\r\n    this.starshipService.getStarship()\r\n      .subscribe(\r\n        starship => this.starship = starship, //Bind to view\r\n        err => {\r\n          // Log errors if any\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  trackByName(index:number, starship:Starship) {\r\n\r\n\r\n    return starship.name;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Starship/starship-list.component.ts","/**\r\n * Created by irfan.maulana on 1/8/2017.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { VehicleService } from './vehicle-list.service';\r\nimport { Vehicle } from './Vehicle';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'vehicle-list',\r\n  template: `\r\n      <h2>Vehicle</h2>\r\n      \r\n      <table class=\"table\">\r\n        <thead class=\"table__head\">\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Vehicle Class</th>\r\n          <th>Manufacturer</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody class=\"table__body\">\r\n        <tr *ngFor=\"let veh of vehicle; let i = index; trackBy:trackByName;\">\r\n          <td>{{ i+1 }}</td>\r\n          <td>{{ veh.name }}</td>\r\n          <td>{{ veh.vehicle_class }}</td>\r\n          <td>{{ veh.manufacturer }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n  `\r\n})\r\nexport class VehicleListComponent implements OnInit {\r\n\r\n  vehicle: Vehicle[];\r\n\r\n\r\n  constructor(\r\n    private vehicleService: VehicleService\r\n  ){}\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadDataVehicle()\r\n  }\r\n\r\n  loadDataVehicle() {\r\n    this.vehicleService.getVehicle()\r\n      .subscribe(\r\n        vehicle => this.vehicle = vehicle, //Bind to view\r\n        err => {\r\n          // Log errors if any\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  trackByName(index:number, vehicle:Vehicle) {\r\n\r\n\r\n    return vehicle.name;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Vehicle/vehicle-list.component.ts","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'my-app',\r\n  template: `\r\n      <HeaderBlock></HeaderBlock>\r\n    \r\n      <main role=\"main\" class=\"site__main main\">\r\n        <nav class=\"main__nav nav\">\r\n      \r\n          <NavigationListBlock></NavigationListBlock>\r\n      \r\n          <FooterBlock></FooterBlock>\r\n      \r\n        </nav>\r\n        <article class=\"main__content content\">\r\n          <div class=\"content__wrapper\">\r\n              \r\n              <router-outlet></router-outlet>\r\n            \r\n          </div>\r\n        </article>\r\n      </main>\r\n  `\r\n})\r\nexport class AppComponent { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpModule, JsonpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\n/*\r\n Routing Application\r\n */\r\nimport { AppRoutingModule }  from './app.routing.module';\r\n\r\n/*\r\nComponent partial\r\n*/\r\nimport { AppComponent }  from './app.component';\r\nimport { HeaderComponent } from './Header/header.component';\r\nimport { NavigationComponent } from './Navigation/navigation.component';\r\nimport { FoooterComponent } from './Footer/footer.component';\r\nimport { FilmListComponent } from './Film/film-list.component';\r\nimport { PeopleListComponent } from './People/people-list.component';\r\nimport { PlanetListComponent } from './Planet/planet-list.component';\r\nimport { SpeciesListComponent } from './Species/species-list.component';\r\nimport { StarshipListComponent } from './Starship/starship-list.component';\r\nimport { VehicleListComponent } from './Vehicle/vehicle-list.component';\r\n\r\n/*\r\n Service to get data\r\n */\r\nimport { FilmService } from './Film/film-list.service';\r\nimport { PlanetService } from './Planet/planet-list.service';\r\nimport { PeopleService } from \"./People/people-list.service\";\r\nimport { SpeciesService } from \"./Species/species-list.service\";\r\nimport { StarshipService } from \"./Starship/starship-list.service\";\r\nimport { VehicleService } from \"./Vehicle/vehicle-list.service\";\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'film', pathMatch: 'full' },\r\n  { path: 'film',  component: FilmListComponent},\r\n  { path: 'planet', component: PlanetListComponent },\r\n  { path: 'people', component: PeopleListComponent },\r\n  { path: 'species', component: SpeciesListComponent },\r\n  { path: 'starship', component: StarshipListComponent },\r\n  { path: 'vehicle', component: VehicleListComponent }\r\n];\r\n\r\n@NgModule({\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    JsonpModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  /*\r\n   AppRoutingModule\r\n   RouterModule.forRoot(appRoutes)\r\n  */\r\n\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    NavigationComponent,\r\n    FoooterComponent,\r\n    FilmListComponent,\r\n    PeopleListComponent,\r\n    PlanetListComponent,\r\n    SpeciesListComponent,\r\n    StarshipListComponent,\r\n    VehicleListComponent\r\n  ],\r\n\r\n  providers: [\r\n    FilmService,\r\n    PeopleService,\r\n    PlanetService,\r\n    SpeciesService,\r\n    StarshipService,\r\n    VehicleService\r\n  ],\r\n\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts"],"sourceRoot":""}